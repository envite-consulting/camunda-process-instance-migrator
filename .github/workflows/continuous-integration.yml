name: CI
on:
  workflow_dispatch:
  push:
    branches-ignore:
      - dependabot/**
    tags:
      - v[0-9]+\.[0-9]+\.[0-9]+
  pull_request:

concurrency:
  group: ${{ github.workflow }}-${{ github.repository }}-${{ github.event_name }}/${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

env:
  JAVA_VERSION: 21

  ARTIFACTS_JARS_NAME: camunda-process-instance-migrator-jars
  ARTIFACTS_JARS_PATH: ~/.m2/repository/de/envite/bpm
  ARTIFACTS_JACOCO_REPORTS_NAME: jacoco-reports
  ARTIFACTS_JACOCO_REPORTS_PATH: "**/jacoco.exec"

  CACHE_MAVEN_NAME: maven
  CACHE_SONAR_NAME: sonar

jobs:
  compile:
    name: Compile all maven modules
    runs-on: ubuntu-22.04
    steps:
      - name: Git checkout
        uses: actions/checkout@v5
      - name: Set up JDK ${{ env.JAVA_VERSION }}
        uses: actions/setup-java@v5
        with:
          distribution: adopt
          java-version: ${{ env.JAVA_VERSION }}
      - name: Cache maven dependencies
        id: cache
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-${{ env.CACHE_MAVEN_NAME }}-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-${{ env.CACHE_MAVEN_NAME }}
      - name: Spotless Format Check
        run: mvn spotless:check
      - name: Compile & build
        run: mvn -B install -DskipTests -Djacoco.skip
      - name: Populate cache
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
          mvn -B dependency:go-offline
          mvn -B test -Dtest=GibtEsNet -Dsurefire.failIfNoSpecifiedTests=false
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.ARTIFACTS_JARS_NAME }}
          path: ${{ env.ARTIFACTS_JARS_PATH }}
          if-no-files-found: error
      - name: Remove artifacts from cache
        run: rm -rf ${{ env.ARTIFACTS_JARS_PATH }}
      - name: Cancel workflow
        if: failure()
        uses: andymckay/cancel-action@0.5

  test:
    runs-on: ubuntu-22.04
    name: Test
    needs: [ compile ]
    steps:
      - name: Git checkout
        uses: actions/checkout@v5
      - name: Set up JDK ${{ env.JAVA_VERSION }}
        uses: actions/setup-java@v5
        with:
          distribution: adopt
          java-version: ${{ env.JAVA_VERSION }}
      - name: Cache maven dependencies
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-${{ env.CACHE_MAVEN_NAME }}-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-${{ env.CACHE_MAVEN_NAME }}
      - name: Download artifacts
        uses: actions/download-artifact@v5
        with:
          name: ${{ env.ARTIFACTS_JARS_NAME }}
          path: ${{ env.ARTIFACTS_JARS_PATH }}
      - name: Test
        run: mvn -B verify -Dcheckstyle.skip
      - name: Upload JaCoCo Report
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.ARTIFACTS_JACOCO_REPORTS_NAME }}
          path: ${{ env.ARTIFACTS_JACOCO_REPORTS_PATH }}
          if-no-files-found: ignore
      - name: Cancel workflow
        if: failure()
        uses: andymckay/cancel-action@0.5

  release_artifacts:
    runs-on: ubuntu-22.04
    name: Release artifacts to Sonatype-Central
    if: github.repository == 'envite-consulting/camunda-process-instance-migrator' && ( startsWith(github.ref, 'refs/tags/v') || github.ref == 'refs/heads/master' ) && github.head_ref == ''
    needs: [ test ]
    # as documented in the gpg manual (https://www.gnupg.org/documentation/manuals/gnupg/Invoking-GPG_002dAGENT.html)
    # we should execute this command before interacting with gpg (otherwise gpg won't work)
    env:
      GPG_TTY: $(tty)
    steps:
      - name: Git checkout
        uses: actions/checkout@v5
      - name: Set up JDK ${{ env.JAVA_VERSION }}
        uses: actions/setup-java@v5
        with:
          distribution: adopt
          java-version: ${{ env.JAVA_VERSION }}
      - name: Cache maven dependencies
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-${{ env.CACHE_MAVEN_NAME }}-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-${{ env.CACHE_MAVEN_NAME }}
      - name: Download artifacts
        uses: actions/download-artifact@v5
        with:
          name: ${{ env.ARTIFACTS_JARS_NAME }}
          path: ${{ env.ARTIFACTS_JARS_PATH }}
      - name: Import GPG Key
        run: echo -n "$GPG_KEY" | base64 --decode | gpg --batch --import
        env:
          GPG_KEY: ${{ secrets.GPG_KEY }}
      - name: Release artifacts to Sonatype-Central
        run: |
          mvn -B deploy -P $([[ "$GITHUB_REF" =~ ^refs/tags/v[0-9]+\.[0-9]+\.[0-9]+$ ]] && echo "release" || echo "snapshot") \
          --settings ci/mvnsettings.xml -DskipTests -Dcheckstyle.skip -Djacoco.skip
        env:
          GPG_KEY_NAME: ${{ secrets.GPG_KEY_NAME }}
          GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
          MAVEN_USERNAME: ${{ secrets.SONATYPE_USERNAME }}
          MAVEN_PASSWORD: ${{ secrets.SONATYPE_PASSWORD }}
      - name: Cancel workflow
        if: failure()
        uses: andymckay/cancel-action@0.5

  upload_to_sonar:
    runs-on: ubuntu-22.04
    name: Upload SonarQube analysis to sonarcloud
    # neither on release nor forks nor dependabot
    if: |
      github.repository == 'envite-consulting/camunda-process-instance-migrator' &&
      !startsWith(github.ref, 'refs/tags') &&
      !startsWith(github.head_ref || github.ref_name, 'dependabot/') &&
      github.event.pull_request.head.repo.full_name == github.repository || github.event_name != 'pull_request'
    needs: [ test ]
    steps:
      - name: Git checkout
        uses: actions/checkout@v5
        with:
          fetch-depth: 0 # Shallow clones should be disabled for a better relevancy of analysis
      - name: Set up JDK ${{ env.JAVA_VERSION }}
        uses: actions/setup-java@v5
        with:
          distribution: adopt
          java-version: ${{ env.JAVA_VERSION }}
      - name: Cache SonarCloud packages
        uses: actions/cache@v4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-${{ env.CACHE_SONAR_NAME }}
          restore-keys: ${{ runner.os }}-${{ env.CACHE_SONAR_NAME }}
      - name: Cache maven dependencies
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-${{ env.CACHE_MAVEN_NAME }}-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-${{ env.CACHE_MAVEN_NAME }}
      - name: Download JaCoCo reports
        uses: actions/download-artifact@v5
        with:
          pattern: ${{ env.ARTIFACTS_JACOCO_REPORTS_NAME }}-*
          merge-multiple: true
      - name: Install
        run: mvn -B install -DskipTests -Dcheckstyle.skip -Dmaven.javadoc.skip
      - name: Upload SonarQube analysis
        run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=${{ secrets.SONAR_PROJECT_KEY }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_ORGANIZATION: ${{ secrets.SONAR_ORGANIZATION }}
      - name: Cancel workflow
        if: failure()
        uses: andymckay/cancel-action@0.5